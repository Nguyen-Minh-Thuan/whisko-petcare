{
	"info": {
		"_postman_id": "pet-health-api-collection",
		"name": "Pet Health API - Whisko PetCare",
		"description": "Complete API collection for testing Pet health features including vaccinations, medical records, and allergies",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8080",
			"type": "string"
		},
		{
			"key": "pet_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "user_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "allergy_id",
			"value": "",
			"type": "string"
		}
	],
	"item": [
		{
			"name": "1. Authentication",
			"item": [
				{
					"name": "Register User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    var jsonData = pm.response.json();",
									"    if (jsonData.data && jsonData.data.user_id) {",
									"        pm.collectionVariables.set('user_id', jsonData.data.user_id);",
									"        console.log('User ID saved:', jsonData.data.user_id);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"testuser@example.com\",\n  \"password\": \"SecurePass123!\",\n  \"full_name\": \"Test User\",\n  \"phone_number\": \"+1234567890\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"register"
							]
						},
						"description": "Register a new user account"
					},
					"response": []
				},
				{
					"name": "Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    var jsonData = pm.response.json();",
									"    if (jsonData.data && jsonData.data.token) {",
									"        pm.collectionVariables.set('auth_token', jsonData.data.token);",
									"        console.log('Auth token saved');",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"testuser@example.com\",\n  \"password\": \"SecurePass123!\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"login"
							]
						},
						"description": "Login to get authentication token"
					},
					"response": []
				}
			],
			"description": "Authentication endpoints for user registration and login"
		},
		{
			"name": "2. Pet Management",
			"item": [
				{
					"name": "Create Pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    var jsonData = pm.response.json();",
									"    if (jsonData.data && jsonData.data.pet_id) {",
									"        pm.collectionVariables.set('pet_id', jsonData.data.pet_id);",
									"        console.log('Pet ID saved:', jsonData.data.pet_id);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user_id\": \"{{user_id}}\",\n  \"name\": \"Max\",\n  \"species\": \"Dog\",\n  \"breed\": \"Golden Retriever\",\n  \"age\": 3,\n  \"weight\": 30.5\n}"
						},
						"url": {
							"raw": "{{base_url}}/pets",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"pets"
							]
						},
						"description": "Create a new pet"
					},
					"response": []
				},
				{
					"name": "Get Pet by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/pets/{{pet_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"pets",
								"{{pet_id}}"
							]
						},
						"description": "Get pet details including health data"
					},
					"response": []
				},
				{
					"name": "List User Pets",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/pets?user_id={{user_id}}&offset=0&limit=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"pets"
							],
							"query": [
								{
									"key": "user_id",
									"value": "{{user_id}}"
								},
								{
									"key": "offset",
									"value": "0"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "List all pets for a user"
					},
					"response": []
				},
				{
					"name": "Update Pet",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Max Updated\",\n  \"species\": \"Dog\",\n  \"breed\": \"Golden Retriever\",\n  \"age\": 4,\n  \"weight\": 32.0\n}"
						},
						"url": {
							"raw": "{{base_url}}/pets/{{pet_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"pets",
								"{{pet_id}}"
							]
						},
						"description": "Update pet information"
					},
					"response": []
				}
			],
			"description": "Basic pet CRUD operations"
		},
		{
			"name": "3. Pet Health - Vaccinations",
			"item": [
				{
					"name": "Add Vaccination - Rabies",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"vaccine_name\": \"Rabies\",\n  \"date\": \"2025-11-01T10:00:00Z\",\n  \"next_due_date\": \"2026-11-01T10:00:00Z\",\n  \"veterinarian\": \"Dr. Sarah Smith\",\n  \"notes\": \"Annual rabies vaccination. No adverse reactions.\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/pets/{{pet_id}}/vaccinations",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"pets",
								"{{pet_id}}",
								"vaccinations"
							]
						},
						"description": "Add rabies vaccination record"
					},
					"response": []
				},
				{
					"name": "Add Vaccination - DHPP",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"vaccine_name\": \"DHPP (Distemper, Hepatitis, Parvovirus, Parainfluenza)\",\n  \"date\": \"2025-10-15T14:30:00Z\",\n  \"next_due_date\": \"2026-10-15T14:30:00Z\",\n  \"veterinarian\": \"Dr. Michael Johnson\",\n  \"notes\": \"Core vaccine administered. Pet handled procedure well.\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/pets/{{pet_id}}/vaccinations",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"pets",
								"{{pet_id}}",
								"vaccinations"
							]
						},
						"description": "Add DHPP vaccination record"
					},
					"response": []
				},
				{
					"name": "Add Vaccination - Bordetella",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"vaccine_name\": \"Bordetella (Kennel Cough)\",\n  \"date\": \"2025-09-20T09:15:00Z\",\n  \"next_due_date\": \"2026-03-20T09:15:00Z\",\n  \"veterinarian\": \"Dr. Emily Chen\",\n  \"notes\": \"Required for boarding. Intranasal administration.\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/pets/{{pet_id}}/vaccinations",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"pets",
								"{{pet_id}}",
								"vaccinations"
							]
						},
						"description": "Add Bordetella vaccination record"
					},
					"response": []
				}
			],
			"description": "Vaccination management endpoints"
		},
		{
			"name": "4. Pet Health - Medical Records",
			"item": [
				{
					"name": "Add Medical Record - Annual Checkup",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"date\": \"2025-11-01T14:00:00Z\",\n  \"description\": \"Annual wellness examination\",\n  \"diagnosis\": \"Healthy - No concerns\",\n  \"treatment\": \"Routine dental cleaning recommended\",\n  \"veterinarian\": \"Dr. Sarah Smith\",\n  \"notes\": \"Weight: 30.5kg. Heart rate normal. Lungs clear. Teeth show slight tartar buildup.\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/pets/{{pet_id}}/medical-records",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"pets",
								"{{pet_id}}",
								"medical-records"
							]
						},
						"description": "Add annual checkup medical record"
					},
					"response": []
				},
				{
					"name": "Add Medical Record - Ear Infection",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"date\": \"2025-08-15T11:30:00Z\",\n  \"description\": \"Ear infection follow-up visit\",\n  \"diagnosis\": \"Otitis externa - resolved\",\n  \"treatment\": \"Continue ear cleaning regimen for 1 more week\",\n  \"veterinarian\": \"Dr. Michael Johnson\",\n  \"notes\": \"Swelling and redness have subsided. Ear canal clear. No discharge present.\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/pets/{{pet_id}}/medical-records",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"pets",
								"{{pet_id}}",
								"medical-records"
							]
						},
						"description": "Add ear infection follow-up record"
					},
					"response": []
				},
				{
					"name": "Add Medical Record - Dental Procedure",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"date\": \"2025-07-10T08:00:00Z\",\n  \"description\": \"Professional dental cleaning under anesthesia\",\n  \"diagnosis\": \"Grade 2 periodontal disease\",\n  \"treatment\": \"Full dental scaling and polishing. One tooth extracted (left upper premolar).\",\n  \"veterinarian\": \"Dr. Emily Chen\",\n  \"notes\": \"Pre-anesthetic bloodwork normal. Procedure went smoothly. Discharged with pain medication and antibiotics. Follow-up in 2 weeks.\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/pets/{{pet_id}}/medical-records",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"pets",
								"{{pet_id}}",
								"medical-records"
							]
						},
						"description": "Add dental procedure record"
					},
					"response": []
				}
			],
			"description": "Medical records management endpoints"
		},
		{
			"name": "5. Pet Health - Allergies",
			"item": [
				{
					"name": "Add Allergy - Chicken (Moderate)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    console.log('Chicken allergy added successfully');",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"allergen\": \"Chicken\",\n  \"severity\": \"moderate\",\n  \"symptoms\": \"Skin rash, itching, redness around muzzle\",\n  \"diagnosed_date\": \"2025-06-15T00:00:00Z\",\n  \"notes\": \"Avoid all chicken-based foods. Switch to lamb or fish protein.\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/pets/{{pet_id}}/allergies",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"pets",
								"{{pet_id}}",
								"allergies"
							]
						},
						"description": "Add chicken allergy"
					},
					"response": []
				},
				{
					"name": "Add Allergy - Grass Pollen (Mild)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"allergen\": \"Grass Pollen\",\n  \"severity\": \"mild\",\n  \"symptoms\": \"Watery eyes, occasional sneezing during spring\",\n  \"diagnosed_date\": \"2025-04-20T00:00:00Z\",\n  \"notes\": \"Seasonal allergy. Monitor during spring months. Antihistamines as needed.\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/pets/{{pet_id}}/allergies",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"pets",
								"{{pet_id}}",
								"allergies"
							]
						},
						"description": "Add grass pollen allergy"
					},
					"response": []
				},
				{
					"name": "Add Allergy - Flea Saliva (Severe)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"allergen\": \"Flea Saliva\",\n  \"severity\": \"severe\",\n  \"symptoms\": \"Intense itching, hair loss, hot spots, secondary skin infections\",\n  \"diagnosed_date\": \"2025-03-10T00:00:00Z\",\n  \"notes\": \"Strict flea prevention protocol required. Monthly topical flea prevention. Check regularly for any signs of fleas.\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/pets/{{pet_id}}/allergies",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"pets",
								"{{pet_id}}",
								"allergies"
							]
						},
						"description": "Add flea saliva allergy"
					},
					"response": []
				},
				{
					"name": "Remove Allergy",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/pets/{{pet_id}}/allergies/{{allergy_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"pets",
								"{{pet_id}}",
								"allergies",
								"{{allergy_id}}"
							]
						},
						"description": "Remove an allergy (use allergy_id from GET pet response)"
					},
					"response": []
				}
			],
			"description": "Allergy management endpoints"
		},
		{
			"name": "6. Verification",
			"item": [
				{
					"name": "Get Pet with All Health Data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response has pet data', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data).to.exist;",
									"});",
									"",
									"pm.test('Pet has health data arrays', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.vaccination_records).to.be.an('array');",
									"    pm.expect(jsonData.data.medical_history).to.be.an('array');",
									"    pm.expect(jsonData.data.allergies).to.be.an('array');",
									"});",
									"",
									"// Save first allergy ID if exists",
									"var jsonData = pm.response.json();",
									"if (jsonData.data.allergies && jsonData.data.allergies.length > 0) {",
									"    pm.collectionVariables.set('allergy_id', jsonData.data.allergies[0].id);",
									"    console.log('First allergy ID saved:', jsonData.data.allergies[0].id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/pets/{{pet_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"pets",
								"{{pet_id}}"
							]
						},
						"description": "Verify all health data is returned in the pet response"
					},
					"response": []
				}
			],
			"description": "Verification and testing endpoints"
		}
	]
}
